# Generated by Django 4.2.7 on 2025-10-10 15:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Expediente',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('numero_expediente', models.CharField(max_length=50, unique=True)),
                ('organismo_origen', models.CharField(blank=True, max_length=120)),
                ('numero_compra', models.CharField(blank=True, max_length=50)),
                ('proveedor', models.CharField(blank=True, max_length=200)),
            ],
            options={
                'verbose_name': 'Expediente',
                'verbose_name_plural': 'Expedientes',
                'ordering': ['numero_expediente'],
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('tipo_usuario', models.CharField(choices=[('admin', 'Administrador'), ('empleado', 'Empleado Hospital')], default='empleado', max_length=10)),
                ('groups', models.ManyToManyField(blank=True, help_text='Los grupos a los que pertenece este usuario.', related_name='usuarios_custom', related_query_name='usuario_custom', to='auth.group', verbose_name='grupos')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permisos específicos para este usuario.', related_name='usuarios_custom', related_query_name='usuario_custom', to='auth.permission', verbose_name='permisos de usuario')),
            ],
            options={
                'verbose_name': 'Usuario',
                'verbose_name_plural': 'Usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Operador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_completo', models.CharField(max_length=200)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telefono', models.CharField(blank=True, max_length=20)),
                ('direccion', models.CharField(blank=True, max_length=300)),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('usuario', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.usuario')),
            ],
            options={
                'verbose_name': 'Operador',
                'verbose_name_plural': 'Operadores',
                'ordering': ['nombre_completo'],
            },
        ),
        migrations.CreateModel(
            name='BienPatrimonial',
            fields=[
                ('clave_unica', models.BigAutoField(primary_key=True, serialize=False, verbose_name='Clave Única')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre')),
                ('descripcion', models.TextField(verbose_name='Descripción')),
                ('cantidad', models.PositiveIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Cantidad')),
                ('cuenta_codigo', models.CharField(blank=True, max_length=20, verbose_name='Cuenta Código')),
                ('nomenclatura_bienes', models.CharField(blank=True, max_length=200, verbose_name='Nomenclatura de Bienes')),
                ('fecha_adquisicion', models.DateField(verbose_name='Fecha de Alta')),
                ('origen', models.CharField(choices=[('DONACION', 'Donación'), ('OMISION', 'Omisión'), ('TRANSFERENCIA', 'Transferencia/Traslado'), ('COMPRA', 'Compra')], default='COMPRA', max_length=15, verbose_name='Origen')),
                ('estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('INACTIVO', 'Inactivo'), ('MANTENIMIENTO', 'En mantenimiento'), ('BAJA', 'Dado de baja')], default='ACTIVO', max_length=50, verbose_name='Estado')),
                ('numero_serie', models.CharField(blank=True, max_length=100, verbose_name='N° de serie')),
                ('valor_adquisicion', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)], verbose_name='Precio')),
                ('numero_identificacion', models.CharField(blank=True, max_length=50, null=True, unique=True, verbose_name='Número de ID')),
                ('servicios', models.CharField(max_length=200, verbose_name='Servicios')),
                ('expediente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='bienes', to='core.expediente', verbose_name='N° de Expediente')),
            ],
            options={
                'verbose_name': 'Bien Patrimonial',
                'verbose_name_plural': 'Bienes Patrimoniales',
                'ordering': ['clave_unica'],
                'indexes': [models.Index(fields=['clave_unica'], name='core_bienpa_clave_u_defa30_idx'), models.Index(fields=['estado'], name='core_bienpa_estado_d48784_idx')],
            },
        ),
    ]
